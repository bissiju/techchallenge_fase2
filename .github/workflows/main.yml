name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build and test
      run: |
        docker build . -t techchallenge-fase3

  image:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure Docker CLI
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      run: |
        docker build -t techchallenge-fase3:latest .
        docker tag techchallenge-fase3:latest ${{ secrets.DOCKER_USERNAME }}/techchallenge-fase3:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/techchallenge-fase3:latest

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f path/to/kubernetes/manifests/

  deploy:
    needs: image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Configure AWS CLI
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.AWS_CLUSTER_NAME }}

    - name: Deploy Secrets
      run: echo "${{ secrets.K8S_SECRETS }}" > k8s/secrets.yaml
    - name: Deploy no Kubernetes
      # run: |
      #   kubectl apply -f k8s/secrets.yaml
      #   kubectl apply -f k8s/db/db.svc.yaml
      #   kubectl apply -f k8s/db/db.pv.yaml
      #   kubectl apply -f k8s/db/db.pvc.yaml
      #   kubectl apply -f k8s/db/db.deployment.yaml
      #   kubectl apply -f k8s/api/api.deployment.yaml
      #   kubectl apply -f k8s/api/api.svc.yaml
      run: |
        kubectl apply -f k8s/secrets.yaml
        kubectl apply -f k8s/api/api.deployment.yaml
        kubectl apply -f k8s/api/api.svc.yaml

    - name: Check status
      run: |
        kubectl get pods
